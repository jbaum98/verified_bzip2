@article{cao2018vst-floyd:,
  author =       {Cao, Qinxiang and Beringer, Lennart and Gruetter,
                  Samuel and Dodds, Josiah and Appel, Andrew W.},
  year =         2018,
  title =        {VST-Floyd: A Separation Logic Tool to Verify
                  Correctness of C Programs},
  journal =      {Journal of Automated Reasoning},
  issn =         {0168-7433},
  doi =          {10.1007/s10817-018-9457-5},
  volume =       61,
  month =        6,
  pages =        {367--422},
  number =       {1-4},
  url =          {http:https://doi.org/10.1007/s10817-018-9457-5},
  abstract =     {The Verified Software Toolchain builds foundational
                  machine-checked proofs of the functional correctness
                  of C programs. Its program logic, Verifiable C, is a
                  shallowly embedded higher-order separation Hoare
                  logic which is proved sound in Coq with respect to
                  the operational semantics of CompCert Clight. This
                  paper introduces VST-Floyd, a verification assistant
                  which offers a set of semiautomatic tactics helping
                  users build functional correctness proofs for C
                  programs using Verifiable C.}
}

@inproceedings{Stewart:2015:CC:2676726.2676985,
  author =       {Stewart, Gordon and Beringer, Lennart and Cuellar,
                  Santiago and Appel, Andrew W.},
  title =        {Compositional CompCert},
  booktitle =    {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT
                  Symposium on Principles of Programming Languages},
  series =       {POPL '15},
  year =         2015,
  isbn =         {978-1-4503-3300-9},
  location =     {Mumbai, India},
  pages =        {275--287},
  numpages =     13,
  url =          {http://doi.acm.org/10.1145/2676726.2676985},
  doi =          {10.1145/2676726.2676985},
  acmid =        2676985,
  publisher =    {ACM},
  address =      {New York, NY, USA},
  keywords =     {compcert, compiler correctness},
}

@inproceedings{leroy:inria-00000963,
  TITLE =        {{Formal certification of a compiler back-end, or:
                  programming a compiler with a proof assistant}},
  AUTHOR =       {Leroy, Xavier},
  URL =          {https://hal.inria.fr/inria-00000963},
  BOOKTITLE =    {{33rd Symposium Principles of Programming Languages
                  (POPL 2006)}},
  ADDRESS =      {Charleston, SC, United States},
  PUBLISHER =    {{ACM Press}},
  PAGES =        {42--54},
  YEAR =         2006,
  MONTH =        Jan,
  DOI =          {10.1145/1111037.1111042},
  PDF =
                  {https://hal.inria.fr/inria-00000963/file/compiler-certif.pdf},
  HAL_ID =       {inria-00000963},
  HAL_VERSION =  {v1},
}

@inproceedings{Appel:2011:VST:1987211.1987212,
  author =       {Appel, Andrew W.},
  title =        {Verified Software Toolchain},
  booktitle =    {Proceedings of the 20th European Conference on
                  Programming Languages and Systems: Part of the Joint
                  European Conferences on Theory and Practice of
                  Software},
  series =       {ESOP'11/ETAPS'11},
  year =         2011,
  isbn =         {978-3-642-19717-8},
  location =     {Saarbr\&\#252;cken, Germany},
  pages =        {1--17},
  numpages =     17,
  url =          {http://dl.acm.org/citation.cfm?id=1987211.1987212},
  acmid =        1987212,
  publisher =    {Springer-Verlag},
  address =      {Berlin, Heidelberg},
}

@book{Appel:2014:PLC:2670099,
  author =       {Appel, Andrew W. and Dockins, Robert and Hobor,
                  Aquinas and Beringer, Lennart and Dodds, Josiah and
                  Stewart, Gordon and Blazy, Sandrine and Leroy,
                  Xavier},
  title =        {Program Logics for Certified Compilers},
  year =         2014,
  isbn =         {110704801X, 9781107048010},
  publisher =    {Cambridge University Press},
  address =      {New York, NY, USA},
}

@INPROCEEDINGS{7536361,
  author =       {A. W. Appel},
  booktitle =    {2016 IEEE 29th Computer Security Foundations
                  Symposium (CSF)},
  title =        {Modular Verification for Computer Security},
  year =         2016,
  pages =        {1-8},
  abstract =     {For many software components, it is useful and
                  important to verify their security. This can be done
                  by an analysis of the software itself, or by
                  isolating the software behind a protection mechanism
                  such as an operating system kernel (virtual-memory
                  protection) or cryptographic authentication (don't
                  accepted untrusted inputs). But the protection
                  mechanisms themselves must then be verified not just
                  for safety but for functional correctness. Several
                  recent projects have demonstrated that formal,
                  deductive functional-correctness verification is now
                  possible for kernels, crypto, and compilers. Here I
                  explain some of the modularity principles that make
                  these verifications possible.},
  keywords =     {data protection;formal verification;security of
                  data;modular verification;computer
                  security;protection mechanism;formal
                  verification;deductive functional-correctness
                  verification;Cryptography;Kernel;Radiation
                  detectors;Safety;Standards;Computer
                  security;verification},
  doi =          {10.1109/CSF.2016.8},
  ISSN =         {2374-8303},
  month =        {June},
}

@inproceedings{Ye:2017:VCS:3133956.3133974,
  author =       {Ye, Katherine Q. and Green, Matthew and Sanguansin,
                  Naphat and Beringer, Lennart and Petcher, Adam and
                  Appel, Andrew W.},
  title =        {Verified Correctness and Security of mbedTLS
                  HMAC-DRBG},
  booktitle =    {Proceedings of the 2017 ACM SIGSAC Conference on
                  Computer and Communications Security},
  series =       {CCS '17},
  year =         2017,
  isbn =         {978-1-4503-4946-8},
  location =     {Dallas, Texas, USA},
  pages =        {2007--2020},
  numpages =     14,
  url =          {http://doi.acm.org/10.1145/3133956.3133974},
  doi =          {10.1145/3133956.3133974},
  acmid =        3133974,
  publisher =    {ACM},
  address =      {New York, NY, USA},
  keywords =     {formal verification, functional specification,
                  hmac-drbg, pseudo-random generator},
}
