@inproceedings{alg-of-prog,
  author =       {Bird, Richard and de Moor, Oege},
  year =         1996,
  month =        01,
  pages =        {167-203},
  title =        {The Algebra of Programming},
  doi =          {10.1007/978-3-642-61455-2_12}
}

@inproceedings{appel-func-spec,
  author =       {A. W. {Appel}},
  booktitle =    {2016 IEEE 29th Computer Security Foundations
                  Symposium (CSF)},
  title =        {Modular Verification for Computer Security},
  year =         2016,
  pages =        {1-8},
  abstract =     {For many software components, it is useful and
                  important to verify their security. This can be done
                  by an analysis of the software itself, or by
                  isolating the software behind a protection mechanism
                  such as an operating system kernel (virtual-memory
                  protection) or cryptographic authentication (don't
                  accepted untrusted inputs). But the protection
                  mechanisms themselves must then be verified not just
                  for safety but for functional correctness. Several
                  recent projects have demonstrated that formal,
                  deductive functional-correctness verification is now
                  possible for kernels, crypto, and compilers. Here I
                  explain some of the modularity principles that make
                  these verifications possible.},
  keywords =     {data protection;formal verification;security of
                  data;modular verification;computer
                  security;protection mechanism;formal
                  verification;deductive functional-correctness
                  verification;Cryptography;Kernel;Radiation
                  detectors;Safety;Standards;Computer
                  security;verification},
  doi =          {10.1109/CSF.2016.8},
  ISSN =         {2374-8303},
  month =        6,
}

@article{birdmu,
  author =       {Bird, Richard S. and Mu, Shin-Cheng},
  title =        {Inverting the {B}urrows--{W}heeler Transform},
  journal =      {J. Funct. Program.},
  issue_date =   {November 2004},
  volume =       14,
  number =       6,
  month =        nov,
  year =         2004,
  issn =         {0956-7968},
  pages =        {603--612},
  numpages =     10,
  url =          {http://dx.doi.org/10.1017/S0956796804005118},
  doi =          {10.1017/S0956796804005118},
  acmid =        1030335,
  publisher =    {Cambridge University Press},
  address =      {New York, NY, USA},
}

@article{bw,
  author =       {Burrows, M and J. Wheeler, D},
  year =         1995,
  month =        07,
  title =        {A Block-Sorting Lossless Data Compression Algorithm},
  volume =       1,
  journal =      {Digital Systems Research Center Research Reports}
}

@article{bw-analysis,
  author =       {Manzini, Giovanni},
  title =        {An Analysis of the {B}urrows--{W}heeler Transform},
  journal =      {J. ACM},
  issue_date =   {May 2001},
  volume =       48,
  number =       3,
  month =        may,
  year =         2001,
  issn =         {0004-5411},
  pages =        {407--430},
  numpages =     24,
  url =          {http://doi.acm.org/10.1145/382780.382782},
  doi =          {10.1145/382780.382782},
  acmid =        382782,
  publisher =    {ACM},
  address =      {New York, NY, USA},
  keywords =     {[B]urrows--{W}heeler transform, block sorting,
                  move-to-front encoding, worst-case analysis of
                  compression},
}

@article{fenwick2007,
  title =        "{B}urrows–-{W}heeler compression: Principles and
                  reflections",
  journal =      "Theoretical Computer Science",
  volume =       387,
  number =       3,
  pages =        "200 - 219",
  year =         2007,
  note =         "The {B}urrows--{W}heeler Transform",
  issn =         "0304-3975",
  doi =          "https://doi.org/10.1016/j.tcs.2007.07.012",
  url =
                  "http://www.sciencedirect.com/science/article/pii/S030439750700521X",
  author =       "Peter Fenwick",
  keywords =     "{B}urrows–-{W}heeler transform, Run encoding, PPM,
                  Recovered contexts, Erasure channels",
  abstract =     "After a general description of the {B}urrows-–{W}heeler
                  transform and a brief survey of recent work on
                  processing its output, the paper examines the coding
                  of the zero-runs from the MTF recoding stage, an
                  aspect with little prior treatment. It is concluded
                  that the original scheme proposed by Wheeler is
                  extremely efficient and unlikely to be much
                  improved. The paper then proposes some new
                  interpretations and uses of the {B}urrows-–{W}heeler
                  transform, with new insights and approaches to
                  lossless compression, perhaps including techniques
                  from error correction."
}

@article{ferragina_index,
  author =       {Ferragina, Paolo and Manzini, Giovanni},
  title =        {Indexing Compressed Text},
  journal =      {J. ACM},
  issue_date =   {July 2005},
  volume =       52,
  number =       4,
  month =        jul,
  year =         2005,
  issn =         {0004-5411},
  pages =        {552--581},
  numpages =     30,
  url =          {http://doi.acm.org/10.1145/1082036.1082039},
  doi =          {10.1145/1082036.1082039},
  acmid =        1082039,
  publisher =    {ACM},
  address =      {New York, NY, USA},
  keywords =     {{B}urrows--{W}heeler transform, Lempel--Ziv compressor,
                  full-text indexing, indexing data structure, pattern
                  searching, suffix array, suffix tree, text
                  compression},
}

@inproceedings{free,
  author =       {Wadler, Philip},
  title =        {Theorems for Free!},
  booktitle =    {Proceedings of the Fourth International Conference
                  on Functional Programming Languages and Computer
                  Architecture},
  series =       {FPCA '89},
  year =         1989,
  isbn =         {0-89791-328-0},
  location =     {Imperial College, London, United Kingdom},
  pages =        {347--359},
  numpages =     13,
  url =          {http://doi.acm.org/10.1145/99370.99404},
  doi =          {10.1145/99370.99404},
  acmid =        99404,
  publisher =    {ACM},
  address =      {New York, NY, USA},
}

@misc{leroy_2018,
  title =        {Library Mergesort},
  url =          {https://xavierleroy.org/coq/Mergesort.html},
  journal =      {Mergesort},
  author =       {Leroy, Xavier},
  year =         2018,
  month =        8
}

@book{pearls,
  author =       {Bird, Richard},
  title =        {Pearls of Functional Algorithm Design},
  year =         2010,
  isbn =         {9780521513388},
  edition =      {1st},
  publisher =    {Cambridge University Press},
  address =      {New York, NY, USA},
}

@misc{tsai_2016,
  title =        {Bzip2: Format Specification},
  url =
                  {https://github.com/dsnet/compress/blob/cc9eb1d7ad760af14e8f918698f745e80377af4f/doc/bzip2-format.pdf},
  journal =      {compress},
  publisher =    {GitHub},
  author =       {Tsai, Joe},
  year =         2016,
  month =        9,
}

@misc{wayne_2004,
  title =        {{B}urrows-–{W}heeler Assignment},
  url =
                  {http://www.cs.princeton.edu/courses/archive/fall18/cos226/assignments/burrows/specification.php},
  journal =      {Princeton University},
  publisher =    {The Trustees of Princeton University},
  author =       {Wayne, Kevin},
  year =         2004
}

article{Bird:1984:PAS:1780.1781,
 author = {Bird, R. S.},
 title = {The Promotion and Accumulation Strategies in Transformational Programming},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1984},
 volume = {6},
 number = {4},
 month = oct,
 year = {1984},
 issn = {0164-0925},
 pages = {487--504},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/1780.1781},
 doi = {10.1145/1780.1781},
 acmid = {1781},
 publisher = {ACM},
 address = {New York, NY, USA},
}
